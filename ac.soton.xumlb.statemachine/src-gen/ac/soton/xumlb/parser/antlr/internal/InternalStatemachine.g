/*
 * generated by Xtext 2.15.0
 */
grammar InternalStatemachine;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ac.soton.xumlb.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ac.soton.xumlb.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ac.soton.xumlb.services.StatemachineGrammarAccess;

}

@parser::members {

 	private StatemachineGrammarAccess grammarAccess;

    public InternalStatemachineParser(TokenStream input, StatemachineGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Statemachine";
   	}

   	@Override
   	protected StatemachineGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleStatemachine
entryRuleStatemachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatemachineRule()); }
	iv_ruleStatemachine=ruleStatemachine
	{ $current=$iv_ruleStatemachine.current; }
	EOF;

// Rule Statemachine
ruleStatemachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='statemachine'
		{
			newLeafNode(otherlv_0, grammarAccess.getStatemachineAccess().getStatemachineKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStatemachineAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStatemachineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xumlb.Statemachine.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getStatemachineAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStatemachineAccess().getTranslationTranslationKindEnumRuleCall_3_0());
				}
				lv_translation_3_0=ruleTranslationKind
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatemachineRule());
					}
					set(
						$current,
						"translation",
						lv_translation_3_0,
						"ac.soton.xumlb.Statemachine.TranslationKind");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getStatemachineAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_5='annotates'
			{
				newLeafNode(otherlv_5, grammarAccess.getStatemachineAccess().getAnnotatesKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatemachineAccess().getCommentEStringParserRuleCall_5_1_0());
					}
					lv_comment_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatemachineRule());
						}
						set(
							$current,
							"comment",
							lv_comment_6_0,
							"ac.soton.xumlb.Statemachine.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='refines'
			{
				newLeafNode(otherlv_7, grammarAccess.getStatemachineAccess().getRefinesKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStatemachineRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getStatemachineAccess().getRefinesStatemachineCrossReference_6_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='instances'
			{
				newLeafNode(otherlv_9, grammarAccess.getStatemachineAccess().getInstancesKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStatemachineRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getStatemachineAccess().getInstancesEventBNamedCommentedElementCrossReference_7_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11='selfName'
			{
				newLeafNode(otherlv_11, grammarAccess.getStatemachineAccess().getSelfNameKeyword_7_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStatemachineAccess().getSelfNameEStringParserRuleCall_7_3_0());
					}
					lv_selfName_12_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStatemachineRule());
						}
						set(
							$current,
							"selfName",
							lv_selfName_12_0,
							"ac.soton.xumlb.Statemachine.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStatemachineAccess().getNodesAbstractNodeParserRuleCall_8_0());
				}
				lv_nodes_13_0=ruleAbstractNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatemachineRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_13_0,
						"ac.soton.xumlb.Statemachine.AbstractNode");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getStatemachineAccess().getTransitionsTransitionParserRuleCall_9_0());
				}
				lv_transitions_14_0=ruleTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStatemachineRule());
					}
					add(
						$current,
						"transitions",
						lv_transitions_14_0,
						"ac.soton.xumlb.Statemachine.Transition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAbstractNode
entryRuleAbstractNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractNodeRule()); }
	iv_ruleAbstractNode=ruleAbstractNode
	{ $current=$iv_ruleAbstractNode.current; }
	EOF;

// Rule AbstractNode
ruleAbstractNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractNodeAccess().getStateParserRuleCall_0());
		}
		this_State_0=ruleState
		{
			$current = $this_State_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractNodeAccess().getInitialParserRuleCall_1());
		}
		this_Initial_1=ruleInitial
		{
			$current = $this_Initial_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractNodeAccess().getFinalParserRuleCall_2());
		}
		this_Final_2=ruleFinal
		{
			$current = $this_Final_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractNodeAccess().getAnyParserRuleCall_3());
		}
		this_Any_3=ruleAny
		{
			$current = $this_Any_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractNodeAccess().getJunctionParserRuleCall_4());
		}
		this_Junction_4=ruleJunction
		{
			$current = $this_Junction_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractNodeAccess().getForkParserRuleCall_5());
		}
		this_Fork_5=ruleFork
		{
			$current = $this_Fork_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)?
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='transition'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getTransitionKeyword_0());
		}
		(
			otherlv_1='elaborates'
			{
				newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getElaboratesKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getElaboratesEventCrossReference_1_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			(
				lv_extended_3_0='extended'
				{
					newLeafNode(lv_extended_3_0, grammarAccess.getTransitionAccess().getExtendedExtendedKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
					setWithLastConsumed($current, "extended", true, "extended");
				}
			)
		)?
		otherlv_4='source'
		{
			newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getSourceKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getSourceAbstractNodeCrossReference_4_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='target'
		{
			newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getTargetKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getTargetAbstractNodeCrossReference_6_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8='any'
			{
				newLeafNode(otherlv_8, grammarAccess.getTransitionAccess().getAnyKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getParametersTypedParameterParserRuleCall_7_1_0());
					}
					lv_parameters_9_0=ruleTypedParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_9_0,
							"ac.soton.xumlb.Statemachine.TypedParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTransitionAccess().getParametersTypedParameterParserRuleCall_7_2_1_0());
						}
						lv_parameters_11_0=ruleTypedParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTransitionRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_11_0,
								"ac.soton.xumlb.Statemachine.TypedParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_12='where'
			{
				newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getWhereKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getGuardsGuardParserRuleCall_8_1_0());
					}
					lv_guards_13_0=ruleGuard
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						add(
							$current,
							"guards",
							lv_guards_13_0,
							"ac.soton.xumlb.Statemachine.Guard");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_14='then'
			{
				newLeafNode(otherlv_14, grammarAccess.getTransitionAccess().getThenKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getActionsActionParserRuleCall_9_1_0());
					}
					lv_actions_15_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						add(
							$current,
							"actions",
							lv_actions_15_0,
							"ac.soton.xumlb.Statemachine.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_16='with'
			{
				newLeafNode(otherlv_16, grammarAccess.getTransitionAccess().getWithKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getWitnessesWitnessParserRuleCall_10_1_0());
					}
					lv_witnesses_17_0=ruleWitness
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						add(
							$current,
							"witnesses",
							lv_witnesses_17_0,
							"ac.soton.xumlb.Statemachine.Witness");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_18='end'
		{
			newLeafNode(otherlv_18, grammarAccess.getTransitionAccess().getEndKeyword_11());
		}
	)
;

// Entry rule entryRuleTypedParameter
entryRuleTypedParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypedParameterRule()); }
	iv_ruleTypedParameter=ruleTypedParameter
	{ $current=$iv_ruleTypedParameter.current; }
	EOF;

// Rule TypedParameter
ruleTypedParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTypedParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypedParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"ac.soton.xumlb.Statemachine.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTypedParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypedParameterAccess().getTypeXTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleXType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypedParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"ac.soton.xumlb.Statemachine.XType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXType
entryRuleXType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXTypeRule()); }
	iv_ruleXType=ruleXType
	{ $current=$iv_ruleXType.current.getText(); }
	EOF;

// Rule XType
ruleXType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXTypeAccess().getXComplexTypeParserRuleCall_0());
		}
		this_XComplexType_0=ruleXComplexType
		{
			$current.merge(this_XComplexType_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='\u00D7'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXTypeAccess().getMultiplicationSignKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getXTypeAccess().getXTypeParserRuleCall_1_1());
			}
			this_XType_2=ruleXType
			{
				$current.merge(this_XType_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleXComplexType
entryRuleXComplexType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXComplexTypeRule()); }
	iv_ruleXComplexType=ruleXComplexType
	{ $current=$iv_ruleXComplexType.current.getText(); }
	EOF;

// Rule XComplexType
ruleXComplexType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='\u2119'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXComplexTypeAccess().getDoubleStruckCapitalPKeyword_0_0());
			}
			kw='('
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXComplexTypeAccess().getLeftParenthesisKeyword_0_1());
			}
			{
				newCompositeNode(grammarAccess.getXComplexTypeAccess().getXTypeParserRuleCall_0_2());
			}
			this_XType_2=ruleXType
			{
				$current.merge(this_XType_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			kw=')'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getXComplexTypeAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getXComplexTypeAccess().getEVENT_B_BUILDIN_TYPEParserRuleCall_1());
		}
		this_EVENT_B_BUILDIN_TYPE_4=ruleEVENT_B_BUILDIN_TYPE
		{
			$current.merge(this_EVENT_B_BUILDIN_TYPE_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_5=RULE_ID
		{
			$current.merge(this_ID_5);
		}
		{
			newLeafNode(this_ID_5, grammarAccess.getXComplexTypeAccess().getIDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleEVENT_B_BUILDIN_TYPE
entryRuleEVENT_B_BUILDIN_TYPE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEVENT_B_BUILDIN_TYPERule()); }
	iv_ruleEVENT_B_BUILDIN_TYPE=ruleEVENT_B_BUILDIN_TYPE
	{ $current=$iv_ruleEVENT_B_BUILDIN_TYPE.current.getText(); }
	EOF;

// Rule EVENT_B_BUILDIN_TYPE
ruleEVENT_B_BUILDIN_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='BOOL'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENT_B_BUILDIN_TYPEAccess().getBOOLKeyword_0());
		}
		    |
		kw='\u2124'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENT_B_BUILDIN_TYPEAccess().getDoubleStruckCapitalZKeyword_1());
		}
	)
;

// Entry rule entryRuleGuard
entryRuleGuard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGuardRule()); }
	iv_ruleGuard=ruleGuard
	{ $current=$iv_ruleGuard.current; }
	EOF;

// Rule Guard
ruleGuard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_theorem_0_0='theorem'
				{
					newLeafNode(lv_theorem_0_0, grammarAccess.getGuardAccess().getTheoremTheoremKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGuardRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGuardAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGuardRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xumlb.Statemachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getGuardAccess().getPredicateXFormulaParserRuleCall_2_0());
				}
				lv_predicate_2_0=ruleXFormula
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGuardRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_2_0,
						"ac.soton.xumlb.Statemachine.XFormula");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_XLABEL
				{
					newLeafNode(lv_name_0_0, grammarAccess.getActionAccess().getNameXLABELTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"ac.soton.xumlb.Statemachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getActionXFormulaParserRuleCall_1_0());
				}
				lv_action_1_0=ruleXFormula
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"action",
						lv_action_1_0,
						"ac.soton.xumlb.Statemachine.XFormula");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWitness
entryRuleWitness returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWitnessRule()); }
	iv_ruleWitness=ruleWitness
	{ $current=$iv_ruleWitness.current; }
	EOF;

// Rule Witness
ruleWitness returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_XLABEL
				{
					newLeafNode(lv_name_0_0, grammarAccess.getWitnessAccess().getNameXLABELTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWitnessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"ac.soton.xumlb.Statemachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWitnessAccess().getPredicateXFormulaParserRuleCall_1_0());
				}
				lv_predicate_1_0=ruleXFormula
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWitnessRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_1_0,
						"ac.soton.xumlb.Statemachine.XFormula");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='State'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateAccess().getStateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xumlb.Statemachine.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='refines'
			{
				newLeafNode(otherlv_2, grammarAccess.getStateAccess().getRefinesKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getStateRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getStateAccess().getRefinesStateCrossReference_2_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='statemachines'
			{
				newLeafNode(otherlv_4, grammarAccess.getStateAccess().getStatemachinesKeyword_3_0());
			}
			otherlv_5='begin'
			{
				newLeafNode(otherlv_5, grammarAccess.getStateAccess().getBeginKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getStatemachinesStatemachineParserRuleCall_3_2_0());
					}
					lv_statemachines_6_0=ruleStatemachine
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"statemachines",
							lv_statemachines_6_0,
							"ac.soton.xumlb.Statemachine.Statemachine");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getStatemachinesStatemachineParserRuleCall_3_3_0());
					}
					lv_statemachines_7_0=ruleStatemachine
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"statemachines",
							lv_statemachines_7_0,
							"ac.soton.xumlb.Statemachine.Statemachine");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8='end'
			{
				newLeafNode(otherlv_8, grammarAccess.getStateAccess().getEndKeyword_3_4());
			}
		)?
		(
			otherlv_9='invariants'
			{
				newLeafNode(otherlv_9, grammarAccess.getStateAccess().getInvariantsKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getInvariantsInvariantParserRuleCall_4_1_0());
					}
					lv_invariants_10_0=ruleInvariant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"invariants",
							lv_invariants_10_0,
							"ac.soton.xumlb.Statemachine.Invariant");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_11='entryActions'
			{
				newLeafNode(otherlv_11, grammarAccess.getStateAccess().getEntryActionsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getEntryActionsActionParserRuleCall_5_1_0());
					}
					lv_entryActions_12_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"entryActions",
							lv_entryActions_12_0,
							"ac.soton.xumlb.Statemachine.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		(
			otherlv_13='exitActions'
			{
				newLeafNode(otherlv_13, grammarAccess.getStateAccess().getExitActionsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getStateAccess().getExitActionsActionParserRuleCall_6_1_0());
					}
					lv_exitActions_14_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStateRule());
						}
						add(
							$current,
							"exitActions",
							lv_exitActions_14_0,
							"ac.soton.xumlb.Statemachine.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
	)
;

// Entry rule entryRuleInvariant
entryRuleInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvariantRule()); }
	iv_ruleInvariant=ruleInvariant
	{ $current=$iv_ruleInvariant.current; }
	EOF;

// Rule Invariant
ruleInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_theorem_0_0='theorem'
				{
					newLeafNode(lv_theorem_0_0, grammarAccess.getInvariantAccess().getTheoremTheoremKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInvariantRule());
					}
					setWithLastConsumed($current, "theorem", true, "theorem");
				}
			)
		)
		(
			(
				lv_name_1_0=RULE_XLABEL
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInvariantAccess().getNameXLABELTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInvariantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xumlb.Statemachine.XLABEL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInvariantAccess().getPredicateXFormulaParserRuleCall_2_0());
				}
				lv_predicate_2_0=ruleXFormula
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInvariantRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_2_0,
						"ac.soton.xumlb.Statemachine.XFormula");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInitial
entryRuleInitial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialRule()); }
	iv_ruleInitial=ruleInitial
	{ $current=$iv_ruleInitial.current; }
	EOF;

// Rule Initial
ruleInitial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Initial'
		{
			newLeafNode(otherlv_0, grammarAccess.getInitialAccess().getInitialKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitialAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitialRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xumlb.Statemachine.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFinal
entryRuleFinal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFinalRule()); }
	iv_ruleFinal=ruleFinal
	{ $current=$iv_ruleFinal.current; }
	EOF;

// Rule Final
ruleFinal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Final'
		{
			newLeafNode(otherlv_0, grammarAccess.getFinalAccess().getFinalKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFinalAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFinalRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xumlb.Statemachine.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAny
entryRuleAny returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnyRule()); }
	iv_ruleAny=ruleAny
	{ $current=$iv_ruleAny.current; }
	EOF;

// Rule Any
ruleAny returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Any'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnyAccess().getAnyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAnyAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnyRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xumlb.Statemachine.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJunction
entryRuleJunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJunctionRule()); }
	iv_ruleJunction=ruleJunction
	{ $current=$iv_ruleJunction.current; }
	EOF;

// Rule Junction
ruleJunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Junction'
		{
			newLeafNode(otherlv_0, grammarAccess.getJunctionAccess().getJunctionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJunctionAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xumlb.Statemachine.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFork
entryRuleFork returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForkRule()); }
	iv_ruleFork=ruleFork
	{ $current=$iv_ruleFork.current; }
	EOF;

// Rule Fork
ruleFork returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Fork'
		{
			newLeafNode(otherlv_0, grammarAccess.getForkAccess().getForkKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForkAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForkRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ac.soton.xumlb.Statemachine.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleXFormula
entryRuleXFormula returns [String current=null]:
	{ newCompositeNode(grammarAccess.getXFormulaRule()); }
	iv_ruleXFormula=ruleXFormula
	{ $current=$iv_ruleXFormula.current.getText(); }
	EOF;

// Rule XFormula
ruleXFormula returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getXFormulaAccess().getEVENTB_IDENTIFIER_KEYWORDParserRuleCall_0());
		}
		this_EVENTB_IDENTIFIER_KEYWORD_0=ruleEVENTB_IDENTIFIER_KEYWORD
		{
			$current.merge(this_EVENTB_IDENTIFIER_KEYWORD_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXFormulaAccess().getEVENTB_PREDICATE_SYMBOLSParserRuleCall_1());
		}
		this_EVENTB_PREDICATE_SYMBOLS_1=ruleEVENTB_PREDICATE_SYMBOLS
		{
			$current.merge(this_EVENTB_PREDICATE_SYMBOLS_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getXFormulaAccess().getEVENTB_EXPRESSION_SYMBOLSParserRuleCall_2());
		}
		this_EVENTB_EXPRESSION_SYMBOLS_2=ruleEVENTB_EXPRESSION_SYMBOLS
		{
			$current.merge(this_EVENTB_EXPRESSION_SYMBOLS_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_ID_3=RULE_ID
		{
			$current.merge(this_ID_3);
		}
		{
			newLeafNode(this_ID_3, grammarAccess.getXFormulaAccess().getIDTerminalRuleCall_3());
		}
		    |
		this_INT_4=RULE_INT
		{
			$current.merge(this_INT_4);
		}
		{
			newLeafNode(this_INT_4, grammarAccess.getXFormulaAccess().getINTTerminalRuleCall_4());
		}
	)+
;

// Entry rule entryRuleEVENTB_IDENTIFIER_KEYWORD
entryRuleEVENTB_IDENTIFIER_KEYWORD returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEVENTB_IDENTIFIER_KEYWORDRule()); }
	iv_ruleEVENTB_IDENTIFIER_KEYWORD=ruleEVENTB_IDENTIFIER_KEYWORD
	{ $current=$iv_ruleEVENTB_IDENTIFIER_KEYWORD.current.getText(); }
	EOF;

// Rule EVENTB_IDENTIFIER_KEYWORD
ruleEVENTB_IDENTIFIER_KEYWORD returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='BOOL'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getBOOLKeyword_0());
		}
		    |
		kw='FALSE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getFALSEKeyword_1());
		}
		    |
		kw='TRUE'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getTRUEKeyword_2());
		}
		    |
		kw='bool'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getBoolKeyword_3());
		}
		    |
		kw='card'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getCardKeyword_4());
		}
		    |
		kw='dom'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDomKeyword_5());
		}
		    |
		kw='finite'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getFiniteKeyword_6());
		}
		    |
		kw='id'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getIdKeyword_7());
		}
		    |
		kw='inter'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getInterKeyword_8());
		}
		    |
		kw='max'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getMaxKeyword_9());
		}
		    |
		kw='min'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getMinKeyword_10());
		}
		    |
		kw='mod'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getModKeyword_11());
		}
		    |
		kw='pred'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getPredKeyword_12());
		}
		    |
		kw='prj1'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getPrj1Keyword_13());
		}
		    |
		kw='prj2'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getPrj2Keyword_14());
		}
		    |
		kw='ran'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getRanKeyword_15());
		}
		    |
		kw='succ'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getSuccKeyword_16());
		}
		    |
		kw='union'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getUnionKeyword_17());
		}
		    |
		kw='\u21151'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalNDigitOneKeyword_18());
		}
		    |
		kw='\u2115'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalNKeyword_19());
		}
		    |
		kw='\u21191'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalPDigitOneKeyword_20());
		}
		    |
		kw='\u2119'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalPKeyword_21());
		}
		    |
		kw='\u2124'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_IDENTIFIER_KEYWORDAccess().getDoubleStruckCapitalZKeyword_22());
		}
	)
;

// Entry rule entryRuleEVENTB_PREDICATE_SYMBOLS
entryRuleEVENTB_PREDICATE_SYMBOLS returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEVENTB_PREDICATE_SYMBOLSRule()); }
	iv_ruleEVENTB_PREDICATE_SYMBOLS=ruleEVENTB_PREDICATE_SYMBOLS
	{ $current=$iv_ruleEVENTB_PREDICATE_SYMBOLS.current.getText(); }
	EOF;

// Rule EVENTB_PREDICATE_SYMBOLS
ruleEVENTB_PREDICATE_SYMBOLS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='('
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLeftParenthesisKeyword_0());
		}
		    |
		kw=')'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getRightParenthesisKeyword_1());
		}
		    |
		kw='\u21D4'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLeftRightDoubleArrowKeyword_2());
		}
		    |
		kw='\u21D2'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getRightwardsDoubleArrowKeyword_3());
		}
		    |
		kw='\u2227'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLogicalAndKeyword_4());
		}
		    |
		kw='&'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getAmpersandKeyword_5());
		}
		    |
		kw='\u2228'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLogicalOrKeyword_6());
		}
		    |
		kw='\u00AC'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotSignKeyword_7());
		}
		    |
		kw='\u22A4'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getDownTackKeyword_8());
		}
		    |
		kw='\u22A5'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getUpTackKeyword_9());
		}
		    |
		kw='\u2200'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getForAllKeyword_10());
		}
		    |
		kw='!'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getExclamationMarkKeyword_11());
		}
		    |
		kw='\u2203'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getThereExistsKeyword_12());
		}
		    |
		kw='#'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNumberSignKeyword_13());
		}
		    |
		kw=','
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getCommaKeyword_14());
		}
		    |
		kw='\u00B7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getMiddleDotKeyword_15());
		}
		    |
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getFullStopKeyword_16());
		}
		    |
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getEqualsSignKeyword_17());
		}
		    |
		kw='\u2260'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotEqualToKeyword_18());
		}
		    |
		kw='\u2264'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLessThanOrEqualToKeyword_19());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getLessThanSignKeyword_20());
		}
		    |
		kw='\u2265'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getGreaterThanOrEqualToKeyword_21());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getGreaterThanSignKeyword_22());
		}
		    |
		kw='\u2208'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getElementOfKeyword_23());
		}
		    |
		kw=':'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getColonKeyword_24());
		}
		    |
		kw='\u2209'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotAnElementOfKeyword_25());
		}
		    |
		kw='\u2282'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getSubsetOfKeyword_26());
		}
		    |
		kw='\u2284'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNotASubsetOfKeyword_27());
		}
		    |
		kw='\u2286'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getSubsetOfOrEqualToKeyword_28());
		}
		    |
		kw='\u2288'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getNeitherASubsetOfNorEqualToKeyword_29());
		}
		    |
		kw='partition'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_PREDICATE_SYMBOLSAccess().getPartitionKeyword_30());
		}
	)
;

// Entry rule entryRuleEVENTB_EXPRESSION_SYMBOLS
entryRuleEVENTB_EXPRESSION_SYMBOLS returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEVENTB_EXPRESSION_SYMBOLSRule()); }
	iv_ruleEVENTB_EXPRESSION_SYMBOLS=ruleEVENTB_EXPRESSION_SYMBOLS
	{ $current=$iv_ruleEVENTB_EXPRESSION_SYMBOLS.current.getText(); }
	EOF;

// Rule EVENTB_EXPRESSION_SYMBOLS
ruleEVENTB_EXPRESSION_SYMBOLS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='\u2194'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getLeftRightArrowKeyword_0());
		}
		    |
		kw='\uE100'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE100Keyword_1());
		}
		    |
		kw='\uE101'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE101Keyword_2());
		}
		    |
		kw='\uE102'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE102Keyword_3());
		}
		    |
		kw='\u21F8'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowWithVerticalStrokeKeyword_4());
		}
		    |
		kw='\u2192'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowKeyword_5());
		}
		    |
		kw='\u2914'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowWithTailWithVerticalStrokeKeyword_6());
		}
		    |
		kw='\u21A3'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowWithTailKeyword_7());
		}
		    |
		kw='\u2900'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsTwoHeadedArrowWithVerticalStrokeKeyword_8());
		}
		    |
		kw='\u21A0'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsTwoHeadedArrowKeyword_9());
		}
		    |
		kw='\u2916'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsTwoHeadedArrowWithTailKeyword_10());
		}
		    |
		kw='{'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getLeftCurlyBracketKeyword_11());
		}
		    |
		kw='}'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightCurlyBracketKeyword_12());
		}
		    |
		kw='\u21A6'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightwardsArrowFromBarKeyword_13());
		}
		    |
		kw='\u2205'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getEmptySetKeyword_14());
		}
		    |
		kw='\u2229'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getIntersectionKeyword_15());
		}
		    |
		kw='\u222A'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getUnionKeyword_16());
		}
		    |
		kw='\u2216'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getSetMinusKeyword_17());
		}
		    |
		kw='\u00D7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getMultiplicationSignKeyword_18());
		}
		    |
		kw='['
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getLeftSquareBracketKeyword_19());
		}
		    |
		kw=']'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRightSquareBracketKeyword_20());
		}
		    |
		kw='\uE103'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPrivateUseAreaE103Keyword_21());
		}
		    |
		kw='\u2218'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getRingOperatorKeyword_22());
		}
		    |
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getSemicolonKeyword_23());
		}
		    |
		kw='\u2297'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getCircledTimesKeyword_24());
		}
		    |
		kw='\u2225'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getParallelToKeyword_25());
		}
		    |
		kw='\u223C'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getTildeOperatorKeyword_26());
		}
		    |
		kw='\u25C1'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getWhiteLeftPointingTriangleKeyword_27());
		}
		    |
		kw='\u2A64'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getZNotationDomainAntirestrictionKeyword_28());
		}
		    |
		kw='\u25B7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getWhiteRightPointingTriangleKeyword_29());
		}
		    |
		kw='\u2A65'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getZNotationRangeAntirestrictionKeyword_30());
		}
		    |
		kw='\u03BB'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getGreekSmallLetterLamdaKeyword_31());
		}
		    |
		(
			kw='%'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPercentSignKeyword_32_0());
			}
			kw='\u22C2'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getNAryIntersectionKeyword_32_1());
			}
		)
		    |
		kw='\u22C3'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getNAryUnionKeyword_33());
		}
		    |
		kw='\u2223'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getDividesKeyword_34());
		}
		    |
		kw='\u2025'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getTwoDotLeaderKeyword_35());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getPlusSignKeyword_36());
		}
		    |
		kw='\u2212'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getMinusSignKeyword_37());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getHyphenMinusKeyword_38());
		}
		    |
		kw='\u2217'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getAsteriskOperatorKeyword_39());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getAsteriskKeyword_40());
		}
		    |
		kw='\u00F7'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getDivisionSignKeyword_41());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getSolidusKeyword_42());
		}
		    |
		kw='^'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getCircumflexAccentKeyword_43());
		}
		    |
		kw='\\'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEVENTB_EXPRESSION_SYMBOLSAccess().getBackslashKeyword_44());
		}
	)
;

// Rule TranslationKind
ruleTranslationKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='variables'
			{
				$current = grammarAccess.getTranslationKindAccess().getMULTIVAREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTranslationKindAccess().getMULTIVAREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='enumeration'
			{
				$current = grammarAccess.getTranslationKindAccess().getSINGLEVAREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTranslationKindAccess().getSINGLEVAREnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='REFINEDVAR'
			{
				$current = grammarAccess.getTranslationKindAccess().getREFINEDVAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTranslationKindAccess().getREFINEDVAREnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_XLABEL : '@' ~(':')+ ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_'|'i'..'\u00D6'|'\u00D8'..'\uFFDC') ('a'..'z'|'A'..'Z'|'_'|'i'..'\u00D6'|'\u00D8'..'\uFFDC'|'0'..'9'|'\'')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
